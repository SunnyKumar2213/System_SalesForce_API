<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="s-sf-api-test-suite.xml" />
	<munit:test name="postive_s-sf-api-test-suite-saleforceImplementationFlowTest" doc:id="403b2829-afe6-4486-991e-bc2921d07a62" description="Test">
		<munit:behavior >
			<set-payload value="#[output application/json --- readUrl('classpath://mockResources/consumerInpurtMock.json')]" doc:name="Set Payload for queue message" doc:id="5388c572-d1e3-433e-b79c-a8d85a1709fd" />
			<munit-tools:mock-when doc:name="Mock when saleforce connector" doc:id="ab26904d-9557-416a-9007-46c4adbc2a8a" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="insert the data in to salesforce object" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="postive_s_sf_Flow" doc:id="529dcd53-1ae6-45f2-851e-d172d20547a3" name="saleforceImplementationFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression equal to missing payload output " doc:id="d946ce9f-d43a-43b4-b67a-655af8e5991d" >
				<munit-tools:that ><![CDATA[#[import * from dw::test::Asserts 
 ---
payload must equalTo(
[
  {
    "FileName__c": "WBSExport_20220510_15424.txt",
    "CostObjectHierarchyLevel__c": "2",
    "CostObjectName__c": "PDRI Category",
    "SAPP3PlannedCosts__c": "0",
    "SAPP1PlannedCosts__c": "0",
    "ProjectWBSInterfaceFilterHOURLYCO__c": "Y",
    "ProjectWBSInterfaceHRAPIEXPTEXT__c": "2020-07-10 11:00:00",
    "LastUpdateDate__c": "2020-06-30T10:31:15.887-04",
    "OriginalBudget__c": "10000",
    "CurrentBudget__c": "10000",
    "Default__c": "0",
    "Materials__c": "0",
    "Construction__c": "0",
    "Engineering__c": "0",
    "Cost__c": "10000",
    "StartUp__c": "0",
    "Equipment__c": "0",
    "ProjectID__c": "PROJECT-K103244",
    "ProjectTitle__c": "OMS PROJECT #1 - CPG",
    "TotalInvestmentAmount__c": 10000,
    "ExpensePlannedTotalInstalledCost__c": 10000,
    "CapitalPlannedTotalInstalledCost__c": 0,
    "WorkingCapital__c": 0,
    "HierarchyPathID__c": "PROJECT-K103244.01.00"
  },
  {
    "FileName__c": "WBSExport_20220510_15424.txt",
    "CostObjectHierarchyLevel__c": "2",
    "CostObjectName__c": "PDRI Category",
    "SAPP3PlannedCosts__c": "0",
    "SAPP1PlannedCosts__c": "0",
    "ProjectWBSInterfaceFilterHOURLYCO__c": "Y",
    "ProjectWBSInterfaceHRAPIEXPTEXT__c": "2020-07-10 11:00:00",
    "LastUpdateDate__c": "2020-06-30T10:31:15.887-04",
    "OriginalBudget__c": "10000",
    "CurrentBudget__c": "10000",
    "Default__c": "0",
    "Materials__c": "0",
    "Construction__c": "0",
    "Engineering__c": "0",
    "Cost__c": "10000",
    "StartUp__c": "0",
    "Equipment__c": "0",
    "ProjectID__c": "PROJECT-K103244",
    "ProjectTitle__c": "OMS PROJECT #1 - CPG",
    "TotalInvestmentAmount__c": 10000,
    "ExpensePlannedTotalInstalledCost__c": 10000,
    "CapitalPlannedTotalInstalledCost__c": 0,
    "WorkingCapital__c": 0,
    "HierarchyPathID__c": "PROJECT-K103244.02.00"
  }
]
)]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="negative_s-sf-api-test-suite-saleforceImplementationFlowTest" doc:id="a1c99bcb-b8aa-47ae-823d-889843110ad1" description="Test" expectedErrorType="SALESFORCE:CONNECTIVITY">
		<munit:behavior >
			<set-payload value="#[output application/json --- readUrl('classpath://mockResources/consumerInpurtMock.json')]" doc:name="Set Payload for queue message" doc:id="f065f3dc-6e89-4254-92fc-90de5a896f0a" />
			<munit-tools:mock-when doc:name="Mock when saleforce connector" doc:id="ca3e29fe-c249-4dbe-9e1c-29a88f3f95d3" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="insert the data in to salesforce object" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="SALESFORCE:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="negative_saleforceImplementationFlow" doc:id="0a466e12-31f5-4633-90a9-a3ee599ac924" name="saleforceImplementationFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals salesforece connectivity issue" doc:id="61bf4316-b87c-4fa9-8ba8-f5251e8ff96a" actual="#[payload.message]" expected='#["salesforce connectivity issue found"]' />
		</munit:validation>
	</munit:test>

</mule>
